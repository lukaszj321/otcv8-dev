name: Build on request
on: [workflow_dispatch]

permissions:
  contents: read

jobs:
  Windows:
    name: Build Windows
    runs-on: windows-2025
    timeout-minutes: 120

    env:
      VCPKG_DEFAULT_TRIPLET: x86-windows-static

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup vcpkg (pin)
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ runner.workspace }}\vcpkg
          vcpkgGitCommitId: 3b3bd424827a1f7f4813216f6b32b6c61e386b2e
          runVcpkgFormatString: >
            install
            boost-iostreams boost-asio boost-beast boost-system boost-variant boost-lockfree
            boost-process boost-program-options boost-uuid boost-filesystem
            luajit glew physfs openal-soft libogg libvorbis zlib libzip bzip2 openssl
            --triplet ${{ env.VCPKG_DEFAULT_TRIPLET }}

      - name: vcpkg integrate
        run: |
          "${{ runner.workspace }}\vcpkg\vcpkg.exe" integrate install

      - name: Build DirectX
        working-directory: ./vc16
        run: msbuild /p:Configuration=DirectX /p:BUILD_REVISION=${{ github.run_number }}

      - name: Build OpenGL
        working-directory: ./vc16
        run: msbuild /p:Configuration=OpenGL  /p:BUILD_REVISION=${{ github.run_number }}

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: |
            vc16\DirectX\otclient_dx.exe
            vc16\OpenGL\otclient_gl.exe
          if-no-files-found: error

  Android:
    name: Build Android
    runs-on: windows-2025
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup Java (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Android SDK + NDK
        uses: android-actions/setup-android@v3

      - name: Install NDK 21.4
        shell: pwsh
        run: |
          $sdkRoot = "${env:ANDROID_SDK_ROOT}"
          & "$sdkRoot\cmdline-tools\latest\bin\sdkmanager.bat" --install "ndk;21.4.7075529"
          echo "VS_NdkRoot=$sdkRoot\ndk\21.4.7075529" | Out-File -FilePath $env:GITHUB_ENV -Encoding ascii -Append

      - name: Prepare android assets
        shell: pwsh
        run: |
          if (Test-Path .\create_android_assets.ps1) {
            powershell -ExecutionPolicy Bypass -File .\create_android_assets.ps1
          }

      - name: Unpack prebuilt android libs (if present)
        shell: pwsh
        run: |
          if (Test-Path .\android_libs.7z) {
            7z x android_libs.7z -aoa -oC:\android
          }

      - name: Build (ARM64 Release)
        shell: pwsh
        working-directory: ./android
        run: msbuild /p:Configuration=Release /p:Platform="ARM64" /p:BUILD_REVISION=${{ github.run_number }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            **\*.apk
          if-no-files-found: error

  Mac:
    name: Build macOS
    runs-on: macos-13
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install deps (brew)
        run: |
          brew update
          brew install cmake ninja physfs pkgconf luajit xquartz glew openal-soft libogg libvorbis libzip bzip2 openssl@3

      - name: Configure
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build build --parallel

      - name: Rename binary
        run: |
          if [ -f build/otclient ]; then mv build/otclient build/otclient_mac; fi

      - name: Upload mac binary
        uses: actions/upload-artifact@v4
        with:
          name: macos-binary
          path: build/otclient_mac
          if-no-files-found: error

  Linux:
    name: Build Linux
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install deps (apt)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ninja-build cmake \
            libglew-dev liblua5.1-0-dev libluajit-5.1-dev \
            libogg-dev libvorbis-dev zlib1g-dev libzip-dev \
            libopenal-dev libbz2-dev libssl-dev libphysfs-dev

      - name: Configure
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build build --parallel

      - name: Rename binary
        run: |
          if [ -f build/otclient ]; then mv build/otclient build/otclient_linux; fi

      - name: Upload linux binary
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: build/otclient_linux
          if-no-files-found: error
