# .github/workflows/docs.yml
name: Build docs

on:
  push:
    branches: [ master ]
    paths:
      - 'mkdocs.yml'
      - 'docs/**'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

# NIE anuluje trwającego builda, gdy wpadnie kolejny commit
concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: mkdocs build
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # wymagane przez git-revision-date-localized

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # stabilna z mkdocs-material

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-docs.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          # pełen zestaw wprost (możesz to przenieść do requirements-docs.txt)
          pip install \
            mkdocs==1.6.1 \
            mkdocs-material==9.5.49 \
            "mkdocs-material[imaging]" \
            mkdocs-glightbox \
            mkdocs-macros-plugin \
            mkdocs-git-revision-date-localized-plugin \
            pymdown-extensions

      - name: Show versions
        run: |
          mkdocs --version
          python -c "import pkgutil;print(sorted([m.name for m in pkgutil.iter_modules() if m.name.startswith('mkdocs')]))"

      - name: Build site
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
          PIP_NO_PYTHON_VERSION_WARNING: 1
          CI: true
        run: |
          mkdocs build -v --clean
