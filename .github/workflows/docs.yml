name: Docs

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PIP_NO_PYTHON_VERSION_WARNING: "1"
      CI: "true"

    steps:
      - name: Checkout (full history for git-revision-date)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1) Najpierw zapewnij wymagania dla cache pip
      - name: Write docs requirements
        run: |
          mkdir -p docs
          cat > docs/requirements.txt << 'REQS'
          mkdocs==1.*
          mkdocs-material==9.*
          mkdocs-glightbox==0.*
          mkdocs-macros-plugin==1.*
          mkdocs-git-revision-date-localized-plugin==1.*
          REQS

      # 2) Dopiero teraz setup-python z cache'em wskazującym na docs/requirements.txt
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"
          cache-dependency-path: docs/requirements.txt

      - name: Install MkDocs toolchain
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Ensure docs/index.md exists (fallback)
        run: |
          if [ ! -f docs/index.md ]; then
            echo "# OTCv8 — Dokumentacja" > docs/index.md
          fi

      - name: Remove conflicting HTML index
        run: |
          if [ -f docs/index.html ]; then rm -f docs/index.html; fi

      - name: Build site (verbose)
        run: mkdocs build -v

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
