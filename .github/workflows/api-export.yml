name: API + Exports
on:
  workflow_dispatch: {}        # ręcznie, bez 'push'
permissions:
  contents: write
concurrency:
  group: api-exports-manual
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with: { node-version: "20" }

      # 1) Auto-ekstrakcja pełnego API z kodu do docs/api/otcv8-full-api.md
      - run: npm i glob --no-save
      - run: node scripts/extract-api.mjs

      # 2) Złożenie całej dokumentacji do jednego MD i normalizacja pod pandoc
      - run: npm i js-yaml glob --no-save
      - run: node scripts/concat-md.mjs mkdocs.yml OTCv8-Docs.md
      - run: node scripts/normalize-md.mjs OTCv8-Docs.md

      # 3) Build strony MkDocs
      - uses: actions/setup-python@v5
        with: { python-version: "3.x" }
      - run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocs-macros-plugin mkdocs-git-revision-date-localized-plugin
      - run: mkdocs build

      # 4) Eksport DOCX/EPUB + ZIP
      - run: |
          sudo apt-get update && sudo apt-get install -y pandoc zip
          mkdir -p docs/downloads
          pandoc OTCv8-Docs.md -f gfm+hard_line_breaks-raw_html -t docx -o docs/downloads/OTCv8-Docs.docx --wrap=none
          pandoc OTCv8-Docs.md -f gfm+hard_line_breaks-raw_html -t epub -o docs/downloads/OTCv8-Docs.epub --toc --wrap=none
          zip -r docs/downloads/site.zip site
          ls -lh docs/downloads

      # 5) Commit artefaktów (z [skip ci], żeby nie odpalać innych workflowów)
      - name: Commit artefaktów
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add -f docs/api/otcv8-full-api.md docs/downloads/*
          git commit -m "[skip ci] docs: auto API + exports" || echo "no changes"
          git push
