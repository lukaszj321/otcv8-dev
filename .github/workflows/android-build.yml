name: Android build (CMake)

on:
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Android cmdline-tools
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 12266719
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: true

      - name: Install SDK/NDK/CMake
        run: |
          yes | sdkmanager --licenses
          sdkmanager --install "platforms;android-25" "build-tools;34.0.0" "ndk;21.4.7075529" "cmake;3.22.1"

      - name: Extra build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build p7zip-full

      - name: Set NDK env
        run: |
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/21.4.7075529" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/21.4.7075529" >> $GITHUB_ENV

      - name: Unpack android_libs.7z
        run: |
          set -e
          if [ ! -f "android/android_libs.7z" ]; then
            echo "::error::Brakuje android/android_libs.7z w repo. Wrzuć plik i uruchom ponownie."
            exit 1
          fi
          7z x android/android_libs.7z -oandroid/android_libs

      - name: Detect include/lib (arm64-v8a)
        run: |
          set -e
          ROOT="$GITHUB_WORKSPACE/android/android_libs"

          # domyślne + fallback
          INC="$ROOT/arm64-v8a/include"; [ -d "$INC" ] || INC="$ROOT/include"
          LIB="$ROOT/arm64-v8a/lib";     [ -d "$LIB" ] || LIB="$ROOT/lib"

          echo "INC=$INC" | tee -a $GITHUB_ENV
          echo "LIB=$LIB" | tee -a $GITHUB_ENV

          echo "== DEBUG (katalogi android_libs) =="
          find "$ROOT" -maxdepth 2 -type d -print | sed 's/^/  /'

          # wymagane rzeczy
          test -d "$INC" || (echo "::error::Brak katalogu include ($INC)" && exit 1)
          test -d "$LIB" || (echo "::error::Brak katalogu lib ($LIB)" && exit 1)
          test -d "$INC/boost" || (echo "::error::Brak nagłówków Boost w $INC/boost" && exit 1)
          test -f "$LIB/libzip.a" || (echo "::error::Brak $LIB/libzip.a" && exit 1)
          test -f "$LIB/libbz2.a" || (echo "::error::Brak $LIB/libbz2.a" && exit 1)
          test -f "$LIB/libluajit.a" || (echo "::error::Brak $LIB/libluajit.a" && exit 1)
          test -f "$INC/zipconf.h" || (echo "::error::Brak $INC/zipconf.h" && exit 1)

          # LuaJIT nagłówki czasem są w podkatalogu
          LUAJIT_INC="$INC"; [ -d "$INC/luajit-2.0" ] && LUAJIT_INC="$INC/luajit-2.0"
          echo "LUAJIT_INC=$LUAJIT_INC" | tee -a $GITHUB_ENV

      - name: Configure (arm64-v8a)
        run: |
          ROOT="$GITHUB_WORKSPACE/android/android_libs"
          cmake -S . -B build-android-arm64 -G Ninja \
            -DCMAKE_TOOLCHAIN_FILE="$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake" \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-25 \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
            -DBOOST_ROOT="$ROOT" \
            -DBOOST_INCLUDEDIR="$INC" \
            -DBOOST_LIBRARYDIR="$LIB" \
            -DBZIP2_INCLUDE_DIR="$INC" \
            -DBZIP2_LIBRARIES="$LIB/libbz2.a" \
            -DLIBZIP_INCLUDE_DIR_ZIP="$INC" \
            -DLIBZIP_INCLUDE_DIR_ZIPCONF="$INC" \
            -DLIBZIP_LIBRARY="$LIB/libzip.a" \
            -DLUAJIT_INCLUDE_DIR="$LUAJIT_INC" \
            -DLUAJIT_LIBRARY="$LIB/libluajit.a" \
            -DCMAKE_FIND_ROOT_PATH="$ROOT" \
            -DCMAKE_PREFIX_PATH="$ROOT"

      - name: Build (arm64-v8a)
        run: cmake --build build-android-arm64 -j4

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-arm64-build
          path: build-android-arm64/**
          if-no-files-found: warn
